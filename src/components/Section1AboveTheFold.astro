---
// src/components/Section1AboveTheFold.astro
// Removed labels constant

// Stats constant (if it was here) would also be removed or ensured it's not duplicated if used elsewhere.
// Assuming stats are handled by StatsSection.astro as per previous context.
---
<section id="hero" class="min-h-screen flex flex-col items-center justify-center text-center py-12 md:py-16 relative overflow-hidden bg-gradient-to-b from-[#050507] to-[#0a0a15]">
    <!-- Enhanced Tech Background -->
    <div class="absolute inset-0 bg-[url('/tech-pattern.png')] opacity-10"></div>
    
    <!-- Subtle glow effects -->
    <div class="absolute top-1/4 left-1/4 w-96 h-96 rounded-full bg-pulse-purple/5 blur-[100px]"></div>
    <div class="absolute bottom-1/4 right-1/4 w-96 h-96 rounded-full bg-pulse-cyan/5 blur-[100px]"></div>

    <div class="container mx-auto px-4 md:px-8 relative z-10 max-w-4xl">
        <!-- CURIOSITY-DRIVEN EYEBROW TEXT -->
        <p data-animate="fade" data-delay="50" class="text-sm font-semibold text-pulse-cyan mb-3 tracking-wide uppercase">
            For EDM Producers Who Want A Proven Path To Huge Mixes
        </p>
        
        <h1 data-animate="fade" data-delay="100" class="text-2xl sm:text-3xl md:text-4xl font-extrabold tracking-tight leading-tight text-white mb-4 pb-2">
            <span class="text-pulse-cyan font-semibold">New:</span> <span class="text-silvery-gradient leading-tight pb-1">Discover This Ultra-Fast 'AI Tone Tracing' Method Elite Producers Are Using To Instantly Nail Their Mixes In 2025</span>
        </h1>
        
        <!-- CURIOSITY-BUILDING SUBHEADLINE -->
        <p data-animate="fade" data-delay="200" class="text-lg md:text-xl text-gray-300 mb-6 max-w-3xl mx-auto leading-relaxed">
            This little-known method reverse-engineers pro mixes in minutes, so you can dial in a huge, polished sound with perfect accuracy, every single time.
        </p>
        
        <!-- Wistia Video Embed -->
        <div data-animate="fade" data-delay="300" class="mx-auto max-w-xl mb-6 rounded-xl overflow-hidden shadow-2xl">
            <script src="https://fast.wistia.com/player.js" async></script>
            <script src="https://fast.wistia.com/embed/fo0gqcn9z8.js" async type="module"></script>
            <style>
                wistia-player[media-id='fo0gqcn9z8']:not(:defined) {
                    background: center / contain no-repeat url('https://fast.wistia.com/embed/medias/fo0gqcn9z8/swatch');
                    display: block;
                    filter: blur(5px);
                    padding-top: 56.25%;
                }
                @media (max-width: 768px) {
                    .video-container {
                        width: 100%;
                        padding: 0 1rem;
                    }
                }
            </style>
            <div class="video-container">
                <wistia-player media-id="fo0gqcn9z8" aspect="1.7777777777777777"></wistia-player>
            </div>
        </div>
        
        <div data-animate="fade" data-delay="400" class="relative">
            <!-- NEW CTA BUTTON -->
            <a href="#" id="hero-cta-button" class="btn-lg inline-block shadow-cta-glow mb-4">
                CLAIM YOUR 'INSTANT SONG UPGRADE' NOW
            </a>
            
            <!-- SPECIFIC SUBTEXT -->
            <p class="text-sm text-gray-400 mb-4">
                Get a personalized plan to transform your song into a reference-quality mix
            </p>
            
            <!-- LOCATION-BASED URGENCY -->
            <!-- Desktop Version -->
            <div class="desktop-spots" style="font-size: 18px; font-weight: 400; font-style: regular; color: #fff; text-align: center; font-family: 'Inter', sans-serif;">
                Only a few spots left for <span id="user-location-desktop">your area</span> as of <span id="dynamic-date-desktop">Loading...</span>, sessions close soon
            </div>

            <!-- Mobile Version (hidden by default, visible only on mobile) -->
            <div class="mobile-spots" style="font-size: 12px; font-weight: 400; font-style: italic; color: #fff; text-align: center; font-family: 'Inter', sans-serif; display: none;">
                Only <span id="spots-left-mobile">- spots left as of loading...</span> for <span id="user-location-mobile">your area</span>, applications close soon
            </div>
        </div>
    </div>

    <!-- Animated Chevron -->
    <div class="absolute bottom-12 left-1/2 transform -translate-x-1/2 z-20">
        <svg class="w-8 h-8 text-gray-500 animate-bounce" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
        </svg>
    </div>
</section>

<style>
@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.animate-fade-in-up {
  animation: fade-in-up 0.6s ease-out forwards;
  opacity: 0; /* Start hidden */
}
.animation-delay-100 { animation-delay: 0.1s; }
.animation-delay-200 { animation-delay: 0.2s; }
.animation-delay-300 { animation-delay: 0.3s; }
.animation-delay-400 { animation-delay: 0.4s; }
.animation-delay-500 { animation-delay: 0.5s; }
</style>

<script>
// Animation for elements with data-animate (if this script was here and not global)
// Assuming animations.js or Layout.astro handles this globally.

// Hero CTA Button Logic
document.addEventListener('DOMContentLoaded', () => {
  const heroCtaButton = document.getElementById('hero-cta-button');
  const calendarModal = document.getElementById('calendar-modal'); // Make sure this modal exists and has this ID

  if (heroCtaButton && calendarModal) {
    heroCtaButton.addEventListener('click', (event) => {
      event.preventDefault();
      calendarModal.classList.remove('hidden');
      setTimeout(() => calendarModal.classList.add('opacity-100'), 10);
    });
  }

  // Logic for closing the calendar modal (if not already handled globally or in Section7Offer.astro)
  // Example:
  const closeCalendarButton = document.getElementById('close-calendar-modal');
  if (closeCalendarButton && calendarModal) {
      closeCalendarButton.addEventListener('click', () => {
          calendarModal.classList.remove('opacity-100');
          setTimeout(() => calendarModal.classList.add('hidden'), 300);
      });
  }
  // Close on ESC
  window.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && calendarModal && !calendarModal.classList.contains('hidden')) {
          closeCalendarButton?.click();
      }
  });
  // Close on backdrop click
  if (calendarModal) {
      calendarModal.addEventListener('click', (event) => {
          if (event.target === calendarModal) {
              closeCalendarButton?.click();
          }
      });
  }

  // LOCATION AND DATE LOGIC
  // Set date
  const options: Intl.DateTimeFormatOptions = { month: "long", day: "numeric" };
  const today = new Date().toLocaleDateString("en-US", options);

  const dynamicDateDesktop = document.getElementById("dynamic-date-desktop");
  const dynamicDateMobile = document.getElementById("dynamic-date-mobile");
  
  if (dynamicDateDesktop) dynamicDateDesktop.textContent = today;
  if (dynamicDateMobile) dynamicDateMobile.textContent = today;

  // Fetch user location using ipinfo.io
  fetch("https://ipinfo.io/json?token=ff316ef2f19f67")
    .then(response => response.json())
    .then(data => {
      const userLocationDesktop = document.getElementById("user-location-desktop");
      const userLocationMobile = document.getElementById("user-location-mobile");
      
      if (userLocationDesktop) userLocationDesktop.textContent = data.city || "your area";
      if (userLocationMobile) userLocationMobile.textContent = data.city || "your area";
    })
    .catch(error => console.error("Error fetching location:", error));

  // Use shared spots manager
  if ((window as any).spotsManager) {
    (window as any).spotsManager.updateSpotsWithDate('spots-left-mobile');
  }

  // Show the correct version based on screen width
  function toggleVisibility() {
    const mobileSpots = document.querySelector(".mobile-spots") as HTMLElement;
    const desktopSpots = document.querySelector(".desktop-spots") as HTMLElement;
    
    if (mobileSpots && desktopSpots) {
      if (window.innerWidth <= 1100) {
        mobileSpots.style.display = "block";
        desktopSpots.style.display = "none";
      } else {
        mobileSpots.style.display = "none";
        desktopSpots.style.display = "block";
      }
    }
  }

  toggleVisibility();
  window.addEventListener("resize", toggleVisibility);
});
</script> 